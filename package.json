{
  "name": "@athenna/cli",
  "version": "4.20.0",
  "description": "Athenna CLI to create new Athenna projects.",
  "license": "MIT",
  "author": "Jo√£o Lenon <lenon@athenna.io>",
  "bugs": "https://github.com/AthennaIO/Cli/issues",
  "repository": "https://github.com/AthennaIO/Cli.git",
  "homepage": "https://github.com/AthennaIO/Cli#readme",
  "keywords": [
    "esm",
    "cli",
    "artisan",
    "athenna",
    "typescript"
  ],
  "files": [
    "bin/.bin",
    "bin/*.js",
    "bin/*.d.ts",
    "bin/**/*.js",
    "bin/**/*.d.ts",
    "bin/.athennarc.prod.json",
    "src/*.js",
    "src/*.d.ts",
    "src/**/*.js",
    "src/**/*.d.ts",
    "templates/*.edge"
  ],
  "bin": {
    "athenna": "./bin/main.js"
  },
  "scripts": {
    "start": "node artisan serve",
    "start:dev": "node --watch artisan serve",
    "build": "node artisan build",
    "test": "npm run --silent lint:fix && node artisan test",
    "test:debug": "npm run --silent lint:fix && cross-env NODE_DEBUG=athenna:* node --inspect artisan test",
    "test:coverage": "c8 npm run --silent test",
    "lint:fix": "eslint \"{src,bin,tests}/**/*.ts\" --fix"
  },
  "type": "module",
  "imports": {
    "#bin/*": "./bin/*.js",
    "#bin": "./bin/index.js",
    "#src/*": "./src/*.js",
    "#src": "./src/index.js",
    "#tests/*": "./tests/*.js",
    "#tests": "./tests/index.js"
  },
  "dependencies": {
    "@athenna/artisan": "^4.45.0",
    "@athenna/common": "^4.44.0",
    "@athenna/config": "^4.24.0",
    "@athenna/core": "^4.42.0",
    "@athenna/ioc": "^4.24.0",
    "@athenna/logger": "^4.25.0",
    "@athenna/view": "^4.27.0",
    "reflect-metadata": "^0.2.2",
    "source-map-support": "^0.5.21"
  },
  "devDependencies": {
    "@athenna/test": "^4.28.0",
    "@athenna/tsconfig": "^4.16.0",
    "@typescript-eslint/eslint-plugin": "^7.17.0",
    "@typescript-eslint/parser": "^7.17.0",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^8.10.0",
    "eslint-config-standard": "^17.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-n": "^15.7.0",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-promise": "^6.6.0",
    "prettier": "^2.8.8"
  },
  "c8": {
    "all": true,
    "include": [
      "src/**/*.ts"
    ],
    "exclude": [],
    "reporter": [
      "text-summary",
      "lcovonly",
      "html"
    ],
    "report-dir": "./tests/coverage",
    "check-coverage": true
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "all",
    "arrowParens": "avoid",
    "endOfLine": "lf",
    "semi": false,
    "printWidth": 80,
    "overrides": [
      {
        "files": "tests/**/*",
        "options": {
          "printWidth": 120
        }
      }
    ]
  },
  "eslintIgnore": [],
  "eslintConfig": {
    "env": {
      "es2021": true,
      "node": true
    },
    "globals": {
      "ioc": true,
      "Env": true,
      "Config": true
    },
    "plugins": [
      "prettier",
      "@typescript-eslint"
    ],
    "extends": [
      "standard",
      "eslint:recommended",
      "plugin:prettier/recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:@typescript-eslint/eslint-recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "rules": {
      "camelcase": "off",
      "dot-notation": "off",
      "prettier/prettier": "error",
      "no-useless-constructor": "off",
      "@typescript-eslint/no-explicit-any": "off",
      "@typescript-eslint/no-empty-function": "off",
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_",
          "varsIgnorePattern": "^_",
          "caughtErrorsIgnorePattern": "^_"
        }
      ]
    }
  },
  "athenna": {
    "providers": [
      "@athenna/core/providers/CoreProvider"
    ],
    "commands": {
      "configure": "@athenna/artisan/commands/ConfigureCommand",
      "template:customize": "@athenna/artisan/commands/TemplateCustomizeCommand",
      "make:exception": "@athenna/core/commands/MakeExceptionCommand",
      "make:facade": "@athenna/core/commands/MakeFacadeCommand",
      "make:provider": "@athenna/core/commands/MakeProviderCommand",
      "make:service": "@athenna/core/commands/MakeServiceCommand",
      "make:test": "@athenna/core/commands/MakeTestCommand",
      "make:command": "@athenna/artisan/commands/MakeCommandCommand",
      "serve": {
        "path": "@athenna/core/commands/ServeCommand",
        "stayAlive": true
      },
      "build": {
        "path": "@athenna/core/commands/BuildCommand",
        "outDir": "build",
        "tsconfig": "node_modules/@athenna/tsconfig/tsconfig.app-build.json",
        "include": [
          "package.json",
          "package-lock.json",
          "README.md",
          "LICENSE.md",
          "templates/*.edge",
          "bin/.athennarc.prod.json"
        ]
      },
      "test": {
        "path": "@athenna/core/commands/TestCommand",
        "loadAllCommands": true,
        "stayAlive": true
      },
      "repl": {
        "path": "@athenna/core/commands/ReplCommand",
        "stayAlive": true
      },
      "install": {
        "path": "@athenna/core/commands/InstallCommand",
        "registry": "npm"
      },
      "new": {
        "path": "#src/commands/new.command",
        "loadApp": true
      },
      "version": {
        "path": "#src/commands/version.command",
        "loadApp": true
      }
    },
    "templates": {
      "artisan": "templates/artisan.edge",
      "exception": "node_modules/@athenna/core/templates/exception.edge",
      "facade": "node_modules/@athenna/core/templates/facade.edge",
      "provider": "node_modules/@athenna/core/templates/provider.edge",
      "service": "node_modules/@athenna/core/templates/service.edge",
      "test": "node_modules/@athenna/core/templates/test.edge",
      "test-console": "node_modules/@athenna/core/templates/test-console.edge",
      "test-fn": "node_modules/@athenna/core/templates/test-fn.edge",
      "command": "node_modules/@athenna/artisan/templates/command.edge"
    },
    "directories": {
      "bootstrap": "bin",
      "config": "src/config",
      "routes": "src/routes",
      "exceptions": "src/exceptions",
      "providers": "src/providers",
      "facades": "src/providers/facades",
      "services": "src/services",
      "commands": "src/commands",
      "repositories": "src/repositories",
      "tests": "tests",
      "resources": "src/resources",
      "views": "src/resources/views",
      "locales": "src/resources/locales",
      "database": "src/database",
      "seeders": "src/database/seeders",
      "migrations": "src/database/migrations"
    }
  }
}
